name: Front-end staging deployment
on:
  push:
    branches:
      - develop
    paths:
      - 'frontend/**'

defaults:
  run:
    working-directory: frontend

jobs:
  deploy:
    name: Deploy to staging
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create deployment
      uses: bobheadxi/deployments@v0.6.2
      id: deployment
      with:
        step: start
        token: ${{ secrets.GITHUB_TOKEN }}
        env: frontend-staging

    - name: Read .nvmrc
      id: nvm
      run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"

    - name: Use Node.js (.nvmrc)
      uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"

    - name: Cache node-modules
      id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('yarn.lock') }}

    - name: Install Node.js dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - name: Run tests
      run: yarn test

    - name: Deployment
      id: vercel-deployment
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }} 
        github-comment: false
        vercel-args: '--prod'
        scope: ${{ secrets.VERCEL_TEAM_ID }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}} 

    - name: Update deployment status
      uses: bobheadxi/deployments@v0.6.2
      if: always()
      with:
        step: finish
        token: ${{ secrets.GITHUB_TOKEN }}
        status: ${{ job.status }}
        env_url: ${{ steps.vercel-deployment.outputs.preview-url }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
